#!/usr/bin/env bash 
#
# Script name: bb_GDC
#
# Description: Script to run the Gradient Distortion Correction.
#
# Authors: Fidel Alfaro-Almagro, Stephen M. Smith & Mark Jenkinson
#
# Copyright 2017 University of Oxford
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -e
set -x

# Requirements for this script
#  installed versions of: FSL5.0.1+ and gradunwarp python package 
#  environment: FSLDIR, PATH to be able to find gradient_unwarp.py

################################################ SUPPORT FUNCTIONS ##################################################

Usage() {
  echo "`basename $0`: Tool for performing Gradient Non-linearity Distortion Correction for general 4D images, based on gradunwarp python package from MGH (it requires a scanner-specific Siemens coefficient file)"
  echo " "
  echo "Usage: `basename $0` [--workingdir=<working dir>]"
  echo "              --in=<input image>"
  echo "              --out=<output image>"
  echo "              --owarp=<output warp>"
}

# function for parsing options
getopt1() {
    sopt="$1"
    shift 1
    for fn in $@ ; do
	if [ `echo $fn | grep -- "^${sopt}=" | wc -w` -gt 0 ] ; then
	    echo $fn | sed "s/^${sopt}=//"
	    return 0
	fi
    done
}

defaultopt() {
    echo $1
}

################################################### OUTPUT FILES #####################################################

# Outputs (in $WD except for those starting with $Output) : 
#        ${BaseName}_vol1    (first 3D image - internal use only)
#        trilinear           (direct output of gradient_unwarp.py)
#        fullWarp_abs        (output from gradient_unwarp.py)
#        $OutputTransform    (warp in relative convention)
#        $OutputFile         (spline interpolated 4D output)

################################################## OPTION PARSING #####################################################

# Just give usage if no arguments specified
if [ $# -eq 0 ] ; then Usage; exit 0; fi
# check for correct options
if [ $# -lt 4 ] ; then Usage; exit 1; fi

# parse arguments
WD=`getopt1 "--workingdir" $@`  # "$1"
InputFile=`getopt1 "--in" $@`  # "$2"
OutputFile=`getopt1 "--out" $@`  # "$3"
OutputTransform=`getopt1 "--owarp" $@`  # "$4"

InputCoefficients="$BB_BIN_DIR/bb_data/${bb_GDC_coeff}"

# default parameters
OutputFile=`${FSLDIR}/bin/remove_ext ${OutputFile}`
WD=`defaultopt $WD ${OutputFile}.wdir`

BaseName=`${FSLDIR}/bin/remove_ext $InputFile`;
BaseName=`basename $BaseName`;

echo " "
echo " START: GradientDistortionUnwarp"

mkdir -p $WD

########################################## DO WORK ########################################## 

# Extract first volume and run gradient distortion correction on this (all others follow suit as scanner coordinate system is unchanged, even with subject motion)
${FSLDIR}/bin/fslroi ${InputFile} $WD/${BaseName}_vol1.nii.gz 0 1

# move (temporarily) into the working directory as gradient_unwarp.py outputs some files directly into pwd
InputCoeffs=`$BB_BIN_DIR/bb_pipeline_tools/bb_fsl_abspath $InputCoefficients`
ORIGDIR=`pwd`
cd $WD
$BB_BIN_DIR/bb_pipeline_tools/bb_gradient_unwarp.py ${BaseName}_vol1.nii.gz trilinear.nii.gz siemens -g $InputCoeffs -n
cd $ORIGDIR

# Now create an appropriate warpfield output (relative convention) and apply it to all timepoints
${FSLDIR}/bin/convertwarp --abs --ref=$WD/trilinear.nii.gz --warp1=$WD/fullWarp_abs.nii.gz --relout --out=$OutputTransform
${FSLDIR}/bin/applywarp --rel --interp=spline -i $InputFile -r $WD/${BaseName}_vol1.nii.gz -w $OutputTransform -o $OutputFile --paddingsize=1

echo " "
echo " END: GradientDistortionUnwarp"
echo " END: `date`" 


########################################## QA STUFF ########################################## 
#
#if [ -e $WD/qa.txt ] ; then rm -f $WD/qa.txt ; fi
#echo "cd `pwd`" >> $WD/qa.txt
#echo "# Check that the image output of gradient_unwarp.py is the same as from applywarp" >> $WD/qa.txt
#echo "${FSLDIR}/bin/fsleyes $WD/trilinear $OutputFile" >> $WD/qa.txt
#echo "# Optional (further) checking - results from ${FSLDIR}/bin/fslstats should be very close to zero" >> $WD/qa.txt
#echo "${FSLDIR}/bin/applywarp --rel --interp=trilinear -i $InputFile -r $WD/${BaseName}_vol1.nii.gz -w $OutputTransform -o $WD/qa_aw_tri" >> $WD/qa.txt
#echo "${FSLDIR}/bin/fslmaths $WD/qa_aw_tri -sub $WD/trilinear $WD/diff_tri" >> $WD/qa.txt
#echo "${FSLDIR}/bin/fslstats $WD/diff_tri -a -P 100 -M" >> $WD/qa.txt
#
##############################################################################################
